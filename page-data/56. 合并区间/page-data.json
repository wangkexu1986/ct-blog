{"componentChunkName":"component---src-templates-blog-js","path":"/56. 合并区间/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"题目\" style=\"position:relative;\"><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>题目</h2>\n<p>以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。</p>\n<p>示例 1：</p>\n<p>输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n输出：[[1,6],[8,10],[15,18]]\n解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n示例 2：</p>\n<p>输入：intervals = [[1,4],[4,5]]\n输出：[[1,5]]\n解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n </p>\n<p>提示：</p>\n<p>1 &#x3C;= intervals.length &#x3C;= 104\nintervals[i].length == 2\n0 &#x3C;= starti &#x3C;= endi &#x3C;= 104</p>\n<p><a href=\"https://leetcode-cn.com/problems/merge-intervals\">来源：力扣（LeetCode）</a></p>\n<h2 id=\"解题\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解题</h2>\n<h3 id=\"slsay\" style=\"position:relative;\"><a href=\"#slsay\" aria-label=\"slsay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#slsay\" aria-label=\"slsay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slsay</h3>\n<p>题解1 96ms</p>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function(intervals) {\n    if (intervals.length &lt; 2) return intervals;\n    intervals.sort(function(x, y){\n        return x[0] - y[0];\n    });\n\n    const result = [intervals[0]];\n    \n    for (let i = 1, len = intervals.length; i &lt; len; i++) {\n        let flag = true;\n        for (let j = 0, jLen = result.length; j &lt; jLen; j++) {\n            if ( intervals[i][1] &lt; result[j][0] || intervals[i][0] &gt; result[j][1]) {\n                continue;\n            } else {\n                result[j][0] = Math.min(result[j][0], intervals[i][0]);\n                result[j][1] = Math.max(result[j][1], intervals[i][1]);\n                flag = false;\n            }\n        }\n\n        if (flag) {\n            result.push(intervals[i]);\n        }\n    }\n\n    return result;\n};</code>\n        </deckgo-highlight-code>\n<p>题解2 92s</p>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function(intervals) {\n    if (intervals.length &lt; 2) return intervals;\n    intervals.sort(function(x, y){\n        return x[0] - y[0];\n    });\n\n    const result = [intervals[0]];\n\n    for (let i = 1, len = intervals.length; i &lt; len; i++) {\n        const last = result[result.length - 1];\n        if (intervals[i][0] &gt; last[1]) {\n            result.push(intervals[i]);;\n        } else {\n            last[1] = Math.max(last[1], intervals[i][1]);\n        }\n    }\n\n    return result;\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"xiaozhouzhou-84ms\" style=\"position:relative;\"><a href=\"#xiaozhouzhou-84ms\" aria-label=\"xiaozhouzhou 84ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#xiaozhouzhou-84ms\" aria-label=\"xiaozhouzhou 84ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xiaozhouzhou 84ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function(intervals) {\n    if(intervals.length == 0) {\n        return [];\n    }\n    intervals = intervals.sort(\n    (a, b) =&gt; {\n            if(a[0] &gt; b[0]) {\n                return 1;\n            }else {\n                return -1;\n            }\n        }\n    );\n    var result = [intervals[0]];\n    for(var i = 1;i&lt;intervals.length;i++) {\n        if(intervals[i][0]&lt;=result[result.length-1][1]) {\n            result[result.length-1][1] = result[result.length-1][1] &gt; intervals[i][1] ? result[result.length-1][1] : intervals[i][1];\n        }else {\n            result.push(intervals[i]);\n        }\n    }\n    return result;\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"wangkexu1986-200ms\" style=\"position:relative;\"><a href=\"#wangkexu1986-200ms\" aria-label=\"wangkexu1986 200ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#wangkexu1986-200ms\" aria-label=\"wangkexu1986 200ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>wangkexu1986 200ms</h3>\n<deckgo-highlight-code switch  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n    func merge(_ intervals: [[Int]]) -&gt; [[Int]] {\n            if intervals.count &lt;= 1 {\n                return intervals\n            }\n\n        var list = intervals.sorted { (arr1, arr2) -&gt; Bool in\n            if Int(arr1.first!) &lt; Int(arr2.first!) {\n                return true\n            } else {\n                return false\n            }\n        }\n\n        var i : Int = 1\n        while i &lt; list.count {\n            if list[i].last! &lt; list[i - 1].last! {\n                list.remove(at : i)\n             } else if list[i].first! &lt;= list[i - 1].last! {\n                 list[i - 1] = [list[i - 1].first!, list[i].last!]\n                 list.remove(at : i)\n             } else {\n                 i += 1\n             }\n            }\n        return list\n    }\n}</code>\n        </deckgo-highlight-code>\n<h3 id=\"kojo-jotaro-52ms\" style=\"position:relative;\"><a href=\"#kojo-jotaro-52ms\" aria-label=\"kojo jotaro 52ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#kojo-jotaro-52ms\" aria-label=\"kojo jotaro 52ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kojo-jotaro 52ms</h3>\n<deckgo-highlight-code c++  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\npublic:\n    static bool cmp(const vector&lt;int&gt; &amp;a,vector&lt;int&gt; &amp;b){\n        return a[0] &lt; b[0];\n    }\n    vector&lt;vector&lt;int&gt;&gt; merge(vector&lt;vector&lt;int&gt;&gt;&amp; intervals) {\n        sort(intervals.begin(), intervals.end(), cmp);\n\n        vector&lt;vector&lt;int&gt;&gt; data;\n        for (int i = 0; i &lt; intervals.size(); i++) {\n            int left_point = intervals[i][0];\n            int right_point = intervals[i][1];\n\n\n            while ( i + 1 &lt; intervals.size() &amp;&amp; intervals[i+1][0] &lt;= right_point) {\n                right_point = max(intervals[i+1][1], right_point);\n                i++;\n            }\n            data.push_back({left_point,right_point});\n        }\n        return data;\n    }\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"dutlyuyu-92ms\" style=\"position:relative;\"><a href=\"#dutlyuyu-92ms\" aria-label=\"dutlyuyu 92ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#dutlyuyu-92ms\" aria-label=\"dutlyuyu 92ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dutLyuyu 92ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function(intervals) {\n    intervals.sort((a,b) =&gt; a[0]-b[0]);\n    let index = 1;\n    let a = intervals[0];\n    for(let i = 1; i &lt; intervals.length; i++){\n        let b = intervals[i]; \n        if(a[1] &lt; b[0]){\n            intervals[index] = b;\n            index++;\n            a = b;\n        }else{\n            a[1] = a[1] &gt; b[1] ? a[1] : b[1];\n        } \n    }\n    intervals.length = index ;\n    return intervals;\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"aria486-95ms\" style=\"position:relative;\"><a href=\"#aria486-95ms\" aria-label=\"aria486 95ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#aria486-95ms\" aria-label=\"aria486 95ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aria486 95ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">var merge = function(intervals) {\n    intervals.sort(function(a, b) {\n        return a[0] - b[0];\n    });\n    \n    let start = 1;\n    while (start &lt; intervals.length) {\n        if (intervals[start][0] &gt; intervals[start-1][1]) {\n            start++;\n        } else {\n            const left = Math.min(intervals[start-1][0], intervals[start][0]);\n            const right = Math.max(intervals[start-1][1], intervals[start][1]);\n            intervals.splice(start, 1);\n            intervals[start-1] = [left, right];\n        }\n    }\n    return intervals;\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"fangq78-9ms\" style=\"position:relative;\"><a href=\"#fangq78-9ms\" aria-label=\"fangq78 9ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#fangq78-9ms\" aria-label=\"fangq78 9ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fangq78 9ms</h3>\n<deckgo-highlight-code java  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n    public int[][] merge(int[][] intervals) {\n        List&lt;int[]&gt; resultList = new ArrayList&lt;&gt;();\n        if (intervals == null || intervals.length == 0) {\n            return new int[0][];\n        }\n        System.out.println(&quot;1&quot;);\n        Arrays.sort(intervals, new Comparator&lt;int[]&gt;() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                // TODO Auto-generated method stub\n                return o1[0] - o2[0];\n            }\n        });\n\n        int i = 0;\n        while (i &lt; intervals.length) {\n            int start = intervals[i][0];\n            int end = intervals[i][1];\n            while (i &lt; intervals.length - 1 &amp;&amp; end &gt;= intervals[i + 1][0]) {\n                i++;\n                end = Math.max(end, intervals[i][1]);\n            }\n            resultList.add(new int[] { start, end });\n            i++;\n        }\n        return resultList.toArray(new int[0][]);\n    }\n}</code>\n        </deckgo-highlight-code>\n<h3 id=\"da-ly-xu-9ms\" style=\"position:relative;\"><a href=\"#da-ly-xu-9ms\" aria-label=\"da ly xu 9ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#da-ly-xu-9ms\" aria-label=\"da ly xu 9ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DA-ly-xu 9ms</h3>\n<deckgo-highlight-code java  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n    public int[][] merge(int[][] intervals) {\n        if (intervals == null || intervals.length == 0) {\n\t\t\treturn new int[0][0];\n\t\t}\n\n\t\tfor (int[] item : intervals) {\n\t\t\tArrays.parallelSort(item);\n\t\t}\n\n\t\tArrays.parallelSort(intervals, (interval1, interval2) -&gt; interval1[0] - interval2[0]);\n\n\t\tif (intervals.length == 1) {\n\t\t\treturn intervals;\n\t\t}\n\n\t\tList&lt;int[]&gt; result = new ArrayList&lt;int[]&gt;();\n\t\tfor (int index = 1; index &lt; intervals.length; index++) {\n\t\t\tint[] previousPair = intervals[index - 1];\n\t\t\tint[] currentPair = intervals[index];\n\t\t\tif (previousPair[previousPair.length - 1] &gt;= currentPair[0]) {\n\t\t\t\tcurrentPair[0] = previousPair[0];\n\t\t\t\tif (previousPair[previousPair.length - 1] &gt; currentPair[currentPair.length - 1]) {\n\t\t\t\t\tcurrentPair[currentPair.length - 1] = previousPair[previousPair.length - 1];\n\t\t\t\t}\n\t\t\t\tintervals[index - 1] = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (int index = 0; index &lt; intervals.length; index++) {\n\t\t\tif (intervals[index] != null) {\n\t\t\t\tresult.add(intervals[index]);\n\t\t\t}\n\t\t}\n\n\t\treturn result.toArray(new int[result.size()][2]);\n    }\n}</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"56. 合并区间","date":"2020-08-26","tag":"矩形"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%A2%98%E7%9B%AE\">题目</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E9%A2%98\">解题</a></p>\n<ul>\n<li><a href=\"#slsay\">slsay</a></li>\n<li><a href=\"#xiaozhouzhou-84ms\">xiaozhouzhou 84ms</a></li>\n<li><a href=\"#wangkexu1986-200ms\">wangkexu1986 200ms</a></li>\n<li><a href=\"#kojo-jotaro-52ms\">kojo-jotaro 52ms</a></li>\n<li><a href=\"#dutlyuyu-92ms\">dutLyuyu 92ms</a></li>\n<li><a href=\"#aria486-95ms\">Aria486 95ms</a></li>\n<li><a href=\"#fangq78-9ms\">fangq78 9ms</a></li>\n<li><a href=\"#da-ly-xu-9ms\">DA-ly-xu 9ms</a></li>\n</ul>\n</li>\n</ul>","id":"9cf31761-734d-5541-8b58-a19e94cca019"}},"pageContext":{"slug":"/56. 合并区间/"}},"staticQueryHashes":["3159585216","3810076356"]}