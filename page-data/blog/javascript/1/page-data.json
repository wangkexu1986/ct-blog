{"componentChunkName":"component---src-templates-category-js","path":"/blog/javascript/1","result":{"data":{"allFile":{"edges":[{"node":{"id":"3a279253-80f4-5707-a3d9-ae8dedd7b284","childrenMarkdownRemark":[{"fields":{"slug":"/javascript/ES6基本用法2/"},"frontmatter":{"date":"2018-06-28","title":"ES6基本用法(二)","tag":"ES6,基本语法,异步,Promises","type":null,"author":null},"excerpt":"ES6基本用法_2 Promises 异步延迟加载函数 Promises 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。 简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。 从语法上说，Promise…","timeToRead":13,"wordCount":{"words":301}}]}},{"node":{"id":"5e591407-3fb4-57f4-838b-d218c9cec8fc","childrenMarkdownRemark":[{"fields":{"slug":"/javascript/ES6基本用法1/"},"frontmatter":{"date":"2018-06-12","title":"ES6基本用法(一)","tag":"ES6,基本语法,变量，函数","type":null,"author":null},"excerpt":"ES6基本用法 const和let const const用来定义常量,相当于java中的final关键字. const声明常量之后必须立即初始化. let ES6 新增了let命令，用来声明变量。 块级作用域,只在let命令所在的代码块内有效。 for…","timeToRead":12,"wordCount":{"words":148}}]}}]},"allPageViews":{"nodes":[{"id":"/ct-blog/blog/all/1","totalCount":34},{"id":"/ct-blog/aws/AWS 磁盘扩容/","totalCount":11},{"id":"/ct-blog/notes","totalCount":10},{"id":"/ct-blog/leetcode/1","totalCount":9},{"id":"/ct-blog/styles","totalCount":6},{"id":"/ct-blog/books","totalCount":4},{"id":"/ct-blog/blog/javascript/1","totalCount":3},{"id":"/ct-blog/notes/程序员的修炼之道/1","totalCount":3},{"id":"/ct-blog/104. 二叉树的最大深度/","totalCount":2},{"id":"/ct-blog/aws/AWS 磁盘扩容/#选中卷，右键选择修改卷","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/2","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/6","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/7","totalCount":2},{"id":"/ct-blog/notes/设计模式/1","totalCount":2},{"id":"/ct-blog/notes/重构 改善既有代码的设计 第2版/1","totalCount":2},{"id":"/ct-blog/aws/AWS 磁盘扩容/?utterances=a1a6d56e8034ce3df61fab78lVy9PvEnHeilBklpYqclUEaE68b3xq5kNMAmoqgoYd9R2rhDLX2kyDzcKhbF8dLH/cz1Xvja93WFYJw+IHzidQrB9s3j1W53J+mhFo3og7KzfXN7QEqw9l8JPIM=","totalCount":1},{"id":"/ct-blog/blog/aws/1","totalCount":1},{"id":"/ct-blog/css/css盒模型/","totalCount":1},{"id":"/ct-blog/javascript/ES6基本用法1/","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/3","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/4","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/5","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/8","totalCount":1},{"id":"/ct-blog/notes/设计模式/2","totalCount":1},{"id":"/ct-blog/notes/设计模式/4","totalCount":1},{"id":"/ct-blog/notes/重构 改善既有代码的设计 第2版/2","totalCount":1},{"id":"/ct-blog/react/React开发规约/","totalCount":1}]}},"pageContext":{"limit":10,"skip":0,"total":7,"page":1,"category":"javascript","pagePath":"blog","pageSize":10}},"staticQueryHashes":["3159585216","3810076356","3996043244","805183911","923319687"]}