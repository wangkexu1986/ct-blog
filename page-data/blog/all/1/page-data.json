{"componentChunkName":"component---src-templates-index-js","path":"/blog/all/1","result":{"data":{"allFile":{"edges":[{"node":{"id":"04ae1a54-b297-5ca5-b3bf-742a977c087f","childrenMarkdownRemark":[{"fields":{"slug":"/aws/AWS 磁盘扩容/"},"frontmatter":{"date":"2021-04-30","title":"[CentOS 6.5] AWS EC2 EBS硬盘扩容","tag":"AWS EC2, 硬盘扩容","type":"问题解决","author":"slsay"},"excerpt":"AWS ec2实例的硬盘扩容需要两步。 通过AWS的管理画面，扩容实例的硬盘大小。 从操作系统，进行扩容适配 本次从8G扩容到30G。 AWS EBS扩容 从AWS…","timeToRead":7,"wordCount":{"words":60}}]}},{"node":{"id":"0b6352f3-329a-5be3-a701-479879798008","childrenMarkdownRemark":[{"fields":{"slug":"/css/css盒模型/"},"frontmatter":{"date":"2018-11-27","title":"CSS 盒模型","tag":"盒模型","type":"学习整理","author":null},"excerpt":"盒模型 盒模型指定元素如何显示以及如何相互交互。页面上的每个元素都被看成一个矩形框。\n这个框由内容(content)，内边距(padding)，边框(border)，外边距(margin)组成. 内边距（padding）出现在内容（content…","timeToRead":6,"wordCount":{"words":328}}]}},{"node":{"id":"41413d79-aa2d-5ef7-832d-bb9dbe6c58d4","childrenMarkdownRemark":[{"fields":{"slug":"/css/CSS如何工作/"},"frontmatter":{"date":"2018-11-27","title":"CSS如何工作","tag":"CSS导入方式","type":"BUG复盘","author":null},"excerpt":"如何将你的 CSS 应用到你的 HTML 上 外部样式表 你已经在这篇文章看到了外部样式表，但是并不知道它的名字。外部样式表是指：当你将你的 CSS 保存在一个独立的扩展名为 .css 的文件中，并从HTML的  元素中引用它。此时 HTML…","timeToRead":1,"wordCount":{"words":73}}]}},{"node":{"id":"baa89dc5-4b4a-5bb1-be7c-50ab88474222","childrenMarkdownRemark":[{"fields":{"slug":"/react/React开发规约/"},"frontmatter":{"date":"2018-08-07","title":"React 开发规约","tag":"react,开发规约","type":null,"author":null},"excerpt":"0.编码规则 https://github.com/airbnb/javascript/ https://github.com/JasonBoy/javascript/tree/master/react…","timeToRead":6,"wordCount":{"words":119}}]}},{"node":{"id":"d0c39a3d-a88b-5c02-ab4a-cfd4bd6fbcaf","childrenMarkdownRemark":[{"fields":{"slug":"/react/初步了解React/"},"frontmatter":{"date":"2018-07-16","title":"初步了解React","tag":"react,了解React,DOM","type":null,"author":null},"excerpt":"初步了解React 学习目标 学完本节后，希望你能够重新回到这里，并能够轻松回答下列问题: 什么是 DOM ？ 什么是 React ？它的哪些方面比较适合应用开发？ React 与 jQuery 的不同之处？ React 的核心概念是什么？ 什么是响应式 UI…","timeToRead":6,"wordCount":{"words":317}}]}},{"node":{"id":"3a279253-80f4-5707-a3d9-ae8dedd7b284","childrenMarkdownRemark":[{"fields":{"slug":"/javascript/ES6基本用法2/"},"frontmatter":{"date":"2018-06-28","title":"ES6基本用法(二)","tag":"ES6,基本语法,异步,Promises","type":null,"author":null},"excerpt":"ES6基本用法_2 Promises 异步延迟加载函数 Promises 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。 简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。 从语法上说，Promise…","timeToRead":13,"wordCount":{"words":301}}]}},{"node":{"id":"5e591407-3fb4-57f4-838b-d218c9cec8fc","childrenMarkdownRemark":[{"fields":{"slug":"/javascript/ES6基本用法1/"},"frontmatter":{"date":"2018-06-12","title":"ES6基本用法(一)","tag":"ES6,基本语法,变量，函数","type":null,"author":null},"excerpt":"ES6基本用法 const和let const const用来定义常量,相当于java中的final关键字. const声明常量之后必须立即初始化. let ES6 新增了let命令，用来声明变量。 块级作用域,只在let命令所在的代码块内有效。 for…","timeToRead":12,"wordCount":{"words":148}}]}},{"node":{"id":"b776b051-ada4-57e2-9dce-107cf56ed9c7","childrenMarkdownRemark":[{"fields":{"slug":"/other/Rest API/"},"frontmatter":{"date":"2018-03-30","title":"Rest API","tag":"Rest API","type":null,"author":null},"excerpt":"Rest API REST（Representational State Transfer，表现层状态转化）是 Roy Thomas Fielding【1】 在2000年他的博士论文《Architectural Styles and the Design of Network…","timeToRead":5,"wordCount":{"words":144}}]}},{"node":{"id":"ed4f9f86-7164-56a9-b3fc-0ca98837f5ea","childrenMarkdownRemark":[{"fields":{"slug":"/nodejs/Nodejs单体测试/"},"frontmatter":{"date":"2018-03-30","title":"nodejs 单体测试","tag":"nodejs,单体测试","type":null,"author":null},"excerpt":"nodejs 单体测试 测试目的 『ISTQB ソフトウェアテスト標準用語集 日本語版』より引用 欠陥を摘出する 対象ソフトウェアの品質レベルが十分であることを確認する 意志決定のための情報を示す 欠陥の作りこみを防ぐ Grenford J. Myers在《The Art of…","timeToRead":12,"wordCount":{"words":153}}]}},{"node":{"id":"1352d918-dfa8-591c-b4be-55e0a2a3f31a","childrenMarkdownRemark":[{"fields":{"slug":"/tool/nvm/"},"frontmatter":{"date":"2018-03-21","title":"Nodejs版本工具nvm","tag":"nvm,开发工具","type":null,"author":null},"excerpt":"nvm 简介 nodejs的版本管理工具 Node Version Manager 安装 官网 使用","timeToRead":1,"wordCount":{"words":9}}]}}]},"allPageViews":{"nodes":[{"id":"/ct-blog/blog/all/1","totalCount":29},{"id":"/ct-blog/notes","totalCount":10},{"id":"/ct-blog/aws/AWS 磁盘扩容/","totalCount":9},{"id":"/ct-blog/leetcode/1","totalCount":9},{"id":"/ct-blog/styles","totalCount":6},{"id":"/ct-blog/books","totalCount":4},{"id":"/ct-blog/blog/javascript/1","totalCount":3},{"id":"/ct-blog/notes/程序员的修炼之道/1","totalCount":3},{"id":"/ct-blog/104. 二叉树的最大深度/","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/2","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/6","totalCount":2},{"id":"/ct-blog/notes/程序员的修炼之道/7","totalCount":2},{"id":"/ct-blog/notes/设计模式/1","totalCount":2},{"id":"/ct-blog/notes/重构 改善既有代码的设计 第2版/1","totalCount":2},{"id":"/ct-blog/aws/AWS 磁盘扩容/?utterances=a1a6d56e8034ce3df61fab78lVy9PvEnHeilBklpYqclUEaE68b3xq5kNMAmoqgoYd9R2rhDLX2kyDzcKhbF8dLH/cz1Xvja93WFYJw+IHzidQrB9s3j1W53J+mhFo3og7KzfXN7QEqw9l8JPIM=","totalCount":1},{"id":"/ct-blog/blog/aws/1","totalCount":1},{"id":"/ct-blog/css/css盒模型/","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/3","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/4","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/5","totalCount":1},{"id":"/ct-blog/notes/程序员的修炼之道/8","totalCount":1},{"id":"/ct-blog/notes/设计模式/2","totalCount":1},{"id":"/ct-blog/notes/设计模式/4","totalCount":1},{"id":"/ct-blog/notes/重构 改善既有代码的设计 第2版/2","totalCount":1}]}},"pageContext":{"limit":10,"skip":0,"total":13,"page":1,"category":"all","pagePath":"blog","pageSize":10}},"staticQueryHashes":["3159585216","3810076356","3996043244","805183911","923319687"]}