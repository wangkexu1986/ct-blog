{"componentChunkName":"component---src-templates-blog-js","path":"/76. 最小覆盖子串/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"题目\" style=\"position:relative;\"><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>题目</h2>\n<p>给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 \"\" 。</p>\n<p>注意：如果 s 中存在这样的子串，我们保证它是唯一的答案。</p>\n<p>示例 1：</p>\n<p>输入：s = “ADOBECODEBANC”, t = “ABC”\n输出：“BANC”\n示例 2：</p>\n<p>输入：s = “a”, t = “a”\n输出：“a”\n </p>\n<p>提示：</p>\n<p>1 &#x3C;= s.length, t.length &#x3C;= 105\ns 和 t 由英文字母组成\n </p>\n<p>进阶：你能设计一个在 o(n) 时间内解决此问题的算法吗？</p>\n<p><a href=\"https://leetcode-cn.com/problems/minimum-window-substring\">来源：力扣（LeetCode）</a></p>\n<h2 id=\"解题\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解题</h2>\n<h3 id=\"da-ly-xu-53ms\" style=\"position:relative;\"><a href=\"#da-ly-xu-53ms\" aria-label=\"da ly xu 53ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#da-ly-xu-53ms\" aria-label=\"da ly xu 53ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DA-ly-xu 53ms</h3>\n<deckgo-highlight-code java  terminal=\"carbon\" theme=\"vscode\" line-numbers=\"true\" editable=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n public String minWindow(String s, String t) {\n \tif (s == null || t == null || t.length() &gt; s.length()) {\n \t\treturn &quot;&quot;;\n \t}\n \tchar[] charsOfT = t.toCharArray();\n \tMap&lt;Character, Integer&gt; targetBucket = new HashMap&lt;Character, Integer&gt;();\n \tfor (char c : charsOfT) {\n \t\tInteger count = targetBucket.get(c);\n \t\tif (count == null) {\n \t\t\ttargetBucket.put(c, 1);\n \t\t} else {\n \t\t\ttargetBucket.put(c, ++count);\n \t\t}\n \t}\n\n \tMap&lt;Character, Integer&gt; collector = new HashMap&lt;Character, Integer&gt;();\n \tint[] shortest = new int[] { -1, -1 };\n \tint shortWindowWidth = Integer.MAX_VALUE;\n\n \tint left = 0;\n \tint right = 0;\n \tfor (int i = 0; i &lt; s.length(); i++) {\n \t\tchar c = s.charAt(i);\n \t\tright = i;\n \t\tif (targetBucket.keySet().contains(c)) {\n \t\t\tInteger countInCollector = collector.get(c);\n \t\t\tif (countInCollector == null) {\n \t\t\t\tcollector.put(c, 1);\n \t\t\t} else {\n \t\t\t\tcollector.put(c, ++countInCollector);\n \t\t\t}\n \t\t\tif (isDesirable(targetBucket, collector)) {\n \t\t\t\t// 該当windowがすべて含む条件を満たした\n \t\t\t\twhile (left &lt; right) {\n \t\t\t\t\tchar contractWindow = s.charAt(left);\n \t\t\t\t\tInteger countOfContractWindow = collector.get(contractWindow);\n \t\t\t\t\tInteger countInTarget = targetBucket.get(contractWindow);\n \t\t\t\t\tif (countOfContractWindow == null) {\n \t\t\t\t\t\tleft++;\n \t\t\t\t\t} else if (countOfContractWindow - 1 &gt;= countInTarget) {\n \t\t\t\t\t\t// left edgeを削除しても条件を満たす\n \t\t\t\t\t\tleft++;\n \t\t\t\t\t\tcollector.put(contractWindow, countOfContractWindow - 1);\n \t\t\t\t\t} else {\n \t\t\t\t\t\tbreak;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tchar nextWindow = s.charAt(left);\n \t\t\t\tInteger countForNextRound = collector.get(nextWindow);\n \t\t\t\tif (countForNextRound == 1) {\n \t\t\t\t\tcollector.remove(nextWindow);\n \t\t\t\t} else {\n \t\t\t\t\tcollector.put(nextWindow, countForNextRound - 1);\n \t\t\t\t}\n \t\t\t\tif (right - left + 1 &lt; shortWindowWidth) {\n \t\t\t\t\tshortWindowWidth = right - left + 1;\n \t\t\t\t\tshortest[0] = left;\n \t\t\t\t\tshortest[1] = right;\n \t\t\t\t}\n \t\t\t\ti = right;\n \t\t\t\tleft++;\n \t\t\t}\n \t\t}\n \t\tcontinue;\n \t}\n\n \tif (shortest[0] == -1 &amp;&amp; shortest[1] == -1) {\n \t\treturn &quot;&quot;;\n \t}\n \treturn s.substring(shortest[0], shortest[1] + 1);\n }\n\n public boolean isDesirable(Map&lt;Character, Integer&gt; targetMap, Map&lt;Character, Integer&gt; sourceMap) {\n \treturn targetMap.keySet().stream().allMatch(key -&gt; {\n \t\tInteger inT = targetMap.get(key);\n \t\tInteger inS = sourceMap.get(key);\n \t\tif (inS == null) {\n \t\t\treturn false;\n \t\t}\n \t\treturn inS &gt;= inT;\n \t});\n }\n}</code>\n        </deckgo-highlight-code>\n<h3 id=\"aria486-110ms\" style=\"position:relative;\"><a href=\"#aria486-110ms\" aria-label=\"aria486 110ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#aria486-110ms\" aria-label=\"aria486 110ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aria486 110ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"vscode\" line-numbers=\"true\" editable=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">const minWindow = (s, t) =&gt; {\n  let minLen = Infinity;\n  let lIndex; \n  let charMap = {};                \n  let charType = 0;         \n  for (const char of t) {      \n    if (!charMap[char]) {\n      charType++;          \n      charMap[char] = 1;\n    } else { \n      charMap[char]++;\n    }\n  }\n  let left = 0;\n  for (let right = 0; right &lt; s.length; right++) {\n    let rightChar = s[right];          \n    if (charMap[rightChar] !== undefined) {\n       charMap[rightChar]--; \n    }\n    if (charMap[rightChar] === 0) {\n        charType--;             \n    }\n    while (charType === 0) { \n      if (right - left + 1 &lt; minLen) {\n        minLen = right - left + 1;\n        lIndex = left;                   \n      }\n      let leftChar = s[left];          \n      if (charMap[leftChar] !== undefined) {\n        charMap[leftChar]++;\n      }\n      if (charMap[leftChar] &gt; 0) {\n        charType++;\n      }\n      left++;                          \n    }\n  }\n  return s.substring(lIndex, lIndex + minLen);\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"dutlyuyu-148ms\" style=\"position:relative;\"><a href=\"#dutlyuyu-148ms\" aria-label=\"dutlyuyu 148ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#dutlyuyu-148ms\" aria-label=\"dutlyuyu 148ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dutLyuyu 148ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"vscode\" line-numbers=\"true\" editable=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {string} s\n * @param {string} t\n * @return {string}\n */\n\nvar minWindow = function(s, t) {\n  let tlen = t.length;\n  let slen =s.length;\n\n  // ? 左闭右开\n  let left = 0;\n  let right = 0;\n\n  let minlen = slen + 1;\n  let begin;\n  let tmap = {};\n  let winmap = {};\n\n  for(let i = 0; i &lt; tlen; i++){\n    tmap[t[i]] &gt; 0 ? tmap[t[i]]++ : (tmap[t[i]] = 1);\n  }\n\n  let distance = 0;\n\n  // ?\n  while(right &lt; slen + 1){\n\n    if((winmap[s[right]]||0)&lt; tmap[s[right]] ){\n      distance++;\n    }\n\n    if(tmap[s[right]]){\n      winmap[s[right]] &gt; 0 ? winmap[s[right]]++ : (winmap[s[right]] = 1);\n    }\n    right++;\n\n    while(distance === tlen){\n      if(right - left &lt; minlen){\n        minlen = right - left;\n        begin = left;\n      }\n\n\n      if(typeof winmap[s[left]] ===&#39;number&#39; &amp;&amp; winmap[s[left]] === tmap[s[left]]){\n        distance--;\n      }\n\n      if(tmap[s[left]]){\n        winmap[s[left]]--;\n      }\n      left++;\n    }\n  }\n\n  if(minlen === s.length +1 ){\n    return &#39;&#39;\n  }\n  return s.substring(begin , minlen + begin);\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"xiaozhouzhou-超时\" style=\"position:relative;\"><a href=\"#xiaozhouzhou-%E8%B6%85%E6%97%B6\" aria-label=\"xiaozhouzhou 超时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#xiaozhouzhou-%E8%B6%85%E6%97%B6\" aria-label=\"xiaozhouzhou 超时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xiaozhouzhou 超时</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"vscode\" line-numbers=\"true\" editable=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {string} s\n * @param {string} t\n * @return {string}\n */\nvar minWindow = function(s, t) {\n    let sStart = 0;\n    let subStr = &quot;&quot;;\n    let tempT = t;\n    let array = [];\n    let tempArray = [];\n    if(s.length &lt; t.length) {\n        return &quot;&quot;;\n    }\n   \n    while(sStart &lt; s.length) {\n        const outIndex = t.indexOf(s[sStart])\n        if(outIndex &gt; -1) {\n            array.push(sStart);\n        }\n        sStart ++;\n    }\n    sStart = 0;\n    while(sStart &lt; array.length) {\n        const index = tempT.indexOf(s[array[sStart]])\n        tempArray.push(sStart);\n        if(index &gt; -1) {\n            tempT = tempT.slice(0, index) + tempT.slice( index+1);\n            if(tempT == &quot;&quot;) {\n                if(subStr == &quot;&quot; || (subStr != &quot;&quot; &amp;&amp; subStr.length &gt; (array[sStart] - array[tempArray[0]] + 1))) {\n                    subStr = s.substring(array[tempArray[0]],array[sStart] +1);\n                }\n                tempT = t;\n                if(tempArray.length &gt; 1) {\n                   sStart = tempArray[1] ;\n                }else {\n                    sStart ++;\n                }\n\n                tempArray = [];\n            }else {\n                sStart ++;\n            }\n            \n        }else {\n            sStart ++;\n        }\n             \n    }\n    \n    return subStr;\n\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"fangq78-超时\" style=\"position:relative;\"><a href=\"#fangq78-%E8%B6%85%E6%97%B6\" aria-label=\"fangq78 超时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#fangq78-%E8%B6%85%E6%97%B6\" aria-label=\"fangq78 超时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fangq78 超时</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"vscode\" line-numbers=\"true\" editable=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n    public String minWindow(String s, String t) {\n        Map&lt;Character, Integer&gt; map = new HashMap&lt;&gt;();\n        if (s==null || t==null || t.length()==0 || s.length()==0) {\n            return &quot;&quot;;\n        }\n        for (Character c : t.toCharArray()) {\n            map.put(c,map.get(c)!=null?map.get(c)+1:1);\n            if (!s.contains(String.valueOf(c))) {\n                return &quot;&quot;;\n            }\n        }\n        String result = new String(s);\n        \n        int pointStart = 0;\n        int pointEnd = 0;\n        while(pointEnd&lt;s.length()) {\n            Character c = s.charAt(pointEnd);\n            if (map.get(c)!=null) {\n                if (map.get(c)==1) {\n                    map.remove(c);\n                } else {\n                    map.put(c,map.get(c)-1);\n                }\n            }\n            if (map.size() == 0) {\n                if (result.length()&gt;pointEnd-pointStart+1) {\n                    result = s.substring(pointStart,pointEnd+1);\n                }\n                if (result.length()==t.length()) {\n                    return result;\n                }\n                \n                while (true) {\n                    \n                    map.clear();\n                    for (Character c1 : t.toCharArray()) {\n                        map.put(c1,map.get(c1)!=null?map.get(c1)+1:1);\n                    }\n                    for (int i = pointStart+1;i&lt;pointEnd+1;i++) {\n                        if (map.get(s.charAt(i))!=null) {\n                            if (map.get(s.charAt(i))==1) {\n                                map.remove(s.charAt(i));\n                            }  else {\n                               map.put(s.charAt(i),map.get(s.charAt(i))-1);\n                            }\n                        } \n                        if (map.size() == 0) {\n                            if (result.length()&gt;pointEnd-pointStart+1) {\n                                result = s.substring(pointStart,pointEnd+1);\n                            }\n                            if (result.length()==t.length()) {\n                                return result;\n                            }\n                            pointStart++;\n                            break;\n                        }\n                    }\n                    if (map.size() &gt; 0) {\n                        break;\n                    } \n                    \n                }\n                \n                pointEnd=pointStart;\n\n                for (Character c1 : t.toCharArray()) {\n                    map.put(c1,map.get(c1)!=null?map.get(c1)+1:1);\n                }\n            } else {\n                pointEnd++;\n            }\n        }\n        return result;\n    }\n}</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"76. 最小覆盖子串","date":"2020-10-28","tag":"矩形","type":null,"author":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%A2%98%E7%9B%AE\">题目</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E9%A2%98\">解题</a></p>\n<ul>\n<li><a href=\"#da-ly-xu-53ms\">DA-ly-xu 53ms</a></li>\n<li><a href=\"#aria486-110ms\">Aria486 110ms</a></li>\n<li><a href=\"#dutlyuyu-148ms\">dutLyuyu 148ms</a></li>\n<li><a href=\"#xiaozhouzhou-%E8%B6%85%E6%97%B6\">xiaozhouzhou 超时</a></li>\n<li><a href=\"#fangq78-%E8%B6%85%E6%97%B6\">fangq78 超时</a></li>\n</ul>\n</li>\n</ul>","id":"e53c86e1-4f3e-5b80-9b18-33aa55494884"}},"pageContext":{"slug":"/76. 最小覆盖子串/","sourceInstanceName":"leetcode"}},"staticQueryHashes":["3159585216","3810076356"]}