{"componentChunkName":"component---src-templates-blog-js","path":"/algorithm/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"链表：-链表翻转-哨兵节点（临界条件）\" style=\"position:relative;\"><a href=\"#%E9%93%BE%E8%A1%A8%EF%BC%9A-%E9%93%BE%E8%A1%A8%E7%BF%BB%E8%BD%AC-%E5%93%A8%E5%85%B5%E8%8A%82%E7%82%B9%EF%BC%88%E4%B8%B4%E7%95%8C%E6%9D%A1%E4%BB%B6%EF%BC%89\" aria-label=\"链表： 链表翻转 哨兵节点（临界条件） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E9%93%BE%E8%A1%A8%EF%BC%9A-%E9%93%BE%E8%A1%A8%E7%BF%BB%E8%BD%AC-%E5%93%A8%E5%85%B5%E8%8A%82%E7%82%B9%EF%BC%88%E4%B8%B4%E7%95%8C%E6%9D%A1%E4%BB%B6%EF%BC%89\" aria-label=\"链表： 链表翻转 哨兵节点（临界条件） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>链表： 链表翻转 哨兵节点（临界条件）</h2>\n<p>141 环形链表 -</p>\n<p>142 环形链表Ⅱ -</p>\n<p>202 快乐数 -</p>\n<p>206 链表反转（递归） -</p>\n<p>92 链表反转Ⅱ  - 链表区间翻转 虚拟头结点, 普通的递归翻转</p>\n<p>61 旋转链表  LeetCode</p>\n<p>24 两两交换（递归）</p>\n<p>19 删除倒数几个链表（虚拟头结点）</p>\n<p><a href=\"https://leetcode-cn.com/problems/partition-list/\">86. 分隔链表</a></p>\n<p>链表的翻转：</p>\n<p>pre是翻转后的头结点， cur是未反转的下一个节点</p>\n<p>循环：while(cur!==null){ [cur.next, prev, cur] = [prev, cur, cur.next] }</p>\n<p>递归：</p>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"dracula\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">var reverseList = function(head) {\n    if (!head || !head.next) { return head }\n    let tail = head.next, phead = reverseList(head.next);\n    head.next = null;\n    tail.next = head;\n    return phead;\n};</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"dracula\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">// 动态规划思想\nvar reverseList = function(head, n) {\n    if (!head || !head.next || n === 1) { return head }\n// 对于这次翻转后n-1个已经翻转完成了，tail这个是翻转部分的tail,\n    let tail = head.next, phead = reverseList(head.next, n-1);\n    head.next = tail.next; // 这个时候的tail.next其实是 未被反转的第一个节点（也就是第n+1节点）\n    tail.next = head;\n    return phead;\n};</code>\n        </deckgo-highlight-code>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\" alt=\"!img\"></p>\n<deckgo-highlight-code js  terminal=\"carbon\" theme=\"dracula\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">// 两两翻转\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function(head) {\n    if (!head || !head.next) return head;\n    let p1 = head, p2 = head.next, q;\n    if (p2.next){\n        q = swapPairs(p2.next);\n        p2.next = q;\n    }\n    p1.next = p2.next;\n    p2.next = p1;\n    return p2;  \n};</code>\n        </deckgo-highlight-code>\n<h2 id=\"树\" style=\"position:relative;\"><a href=\"#%E6%A0%91\" aria-label=\"树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E6%A0%91\" aria-label=\"树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>树</h2>\n<h3 id=\"常用算法\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95\" aria-label=\"常用算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95\" aria-label=\"常用算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常用算法</h3>\n<h5 id=\"前中后序遍历\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86\" aria-label=\"前中后序遍历 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86\" aria-label=\"前中后序遍历 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前中后序遍历</h5>\n<p>略</p>\n<h5 id=\"深度优先遍历\" style=\"position:relative;\"><a href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86\" aria-label=\"深度优先遍历 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86\" aria-label=\"深度优先遍历 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>深度优先遍历</h5>\n<p>参考：<a href=\"https://leetcode-cn.com/tag/depth-first-search/problemset/\">https://leetcode-cn.com/tag/depth-first-search/problemset/</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/path-sum-ii/\">113. 路径总和 II</a></td>\n<td>62.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td>已做</td>\n<td><a href=\"https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/\">114. 二叉树展开为链表</a></td>\n<td>72.3%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/\">116. 填充每个节点的下一个右侧节点指针</a></td>\n<td>69.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/\">117. 填充每个节点的下一个右侧节点指针 II</a></td>\n<td>59.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/\">124. 二叉树中的最大路径和</a></td>\n<td>43.7%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/\">129. 求根节点到叶节点数字之和</a></td>\n<td>67.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/surrounded-regions/\">130. 被围绕的区域</a></td>\n<td>43.3%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/palindrome-partitioning/\">131. 分割回文串</a></td>\n<td>72.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/clone-graph/\">133. 克隆图</a></td>\n<td>67.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-right-side-view/\">199. 二叉树的右视图</a></td>\n<td>64.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/number-of-islands/\">200. 岛屿数量</a></td>\n<td>53.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/course-schedule/\">207. 课程表</a></td>\n<td>54.6%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/course-schedule-ii/\">210. 课程表 II</a></td>\n<td>53.4%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/\">211. 添加与搜索单词 - 数据结构设计</a></td>\n<td>48.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-paths/\">257. 二叉树的所有路径</a></td>\n<td>67.4%</td>\n<td>简单</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/\">329. 矩阵中的最长递增路径</a></td>\n<td>47.4%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/reconstruct-itinerary/\">332. 重新安排行程</a></td>\n<td>44.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/house-robber-iii/\">337. 打家劫舍 III</a></td>\n<td>61.3%</td>\n<td>中等</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"广度优先算法\" style=\"position:relative;\"><a href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95\" aria-label=\"广度优先算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95\" aria-label=\"广度优先算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>广度优先算法</h5>\n<p>参考：<a href=\"https://leetcode-cn.com/tag/breadth-first-search/problemset/\">https://leetcode-cn.com/tag/breadth-first-search/problemset/</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>已做</td>\n<td><a href=\"https://leetcode-cn.com/problems/symmetric-tree/\">101. 对称二叉树</a></td>\n<td>55.0%</td>\n<td>简单</td>\n<td></td>\n</tr>\n<tr>\n<td>已做   <a href=\"https://github.com/DreamArts/dac-3g-portal/issues/99\">issue 99</a></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/\">102. 二叉树的层序遍历</a></td>\n<td>64.1%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/\">103. 二叉树的锯齿形层序遍历</a></td>\n<td>57.1%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/\">107. 二叉树的层序遍历 II</a></td>\n<td>68.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/\">111. 二叉树的最小深度</a></td>\n<td>47.7%</td>\n<td>简单</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/\">116. 填充每个节点的下一个右侧节点指针</a></td>\n<td>69.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/word-ladder-ii/\">126. 单词接龙 II</a></td>\n<td>38.7%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/word-ladder/\">127. 单词接龙</a></td>\n<td>46.4%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/surrounded-regions/\">130. 被围绕的区域</a></td>\n<td>43.3%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/clone-graph/\">133. 克隆图</a></td>\n<td>67.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/binary-tree-right-side-view/\">199. 二叉树的右视图</a></td>\n<td>64.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/number-of-islands/\">200. 岛屿数量</a></td>\n<td>53.9%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/course-schedule/\">207. 课程表</a></td>\n<td>54.6%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/course-schedule-ii/\">210. 课程表 II</a></td>\n<td>53.4%</td>\n<td>中等</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"一些树\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E4%BA%9B%E6%A0%91\" aria-label=\"一些树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E4%B8%80%E4%BA%9B%E6%A0%91\" aria-label=\"一些树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一些树</h3>\n<h5 id=\"二叉搜索树\" style=\"position:relative;\"><a href=\"#%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\" aria-label=\"二叉搜索树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\" aria-label=\"二叉搜索树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二叉搜索树</h5>\n<p>二叉搜索树（Binary Search Tree，简称 BST）是一种很常用的的二叉树。它的定义是：一个二叉树中，<strong>任意节点的值要大于等于左子树所有节点的值，且要小于等于右边子树的所有节点的值。</strong>（不等价于 任何节点 左节点&#x3C; 中 &#x3C; 右节点 ）</p>\n<p>参考： <a href=\"https://github.com/labuladong/fucking-algorithm/blob/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%B3%BB%E5%88%97/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86%E9%94%A6.md\">https://github.com/labuladong/fucking-algorithm/blob/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%B3%BB%E5%88%97/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86%E9%94%A6.md</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>已做 <a href=\"https://github.com/DreamArts/dac-3g-portal/issues/97\">issue</a></td>\n<td><a href=\"https://leetcode-cn.com/problems/validate-binary-search-tree/\">98 验证二叉搜索树</a></td>\n<td></td>\n<td></td>\n<td>注意定义</td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/unique-binary-search-trees-ii/\">95. 不同的二叉搜索树 II</a></td>\n<td>68.7%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/recover-binary-search-tree/\">99. 恢复二叉搜索树</a></td>\n<td>61.9%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/\">108. 将有序数组转换为二叉搜索树</a></td>\n<td>75.3%</td>\n<td>简单</td>\n<td></td>\n</tr>\n<tr>\n<td>5.25已做</td>\n<td><a href=\"https://leetcode-cn.com/problems/delete-node-in-a-bst/\">450. 删除二叉搜索树中的节点</a></td>\n<td>47.3%</td>\n<td>中等</td>\n<td>哨兵根节点</td>\n</tr>\n<tr>\n<td>5.24已做</td>\n<td><a href=\"https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/\">701. 二叉搜索树中的插入操作</a></td>\n<td>72.4%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td>5.24已做</td>\n<td><a href=\"https://leetcode-cn.com/problems/search-in-a-binary-search-tree/\">700. 二叉搜索树中的搜索</a></td>\n<td>75.6%</td>\n<td>简单</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"二叉堆\" style=\"position:relative;\"><a href=\"#%E4%BA%8C%E5%8F%89%E5%A0%86\" aria-label=\"二叉堆 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E4%BA%8C%E5%8F%89%E5%A0%86\" aria-label=\"二叉堆 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二叉堆</h5>\n<p>二叉堆（Binary Heap）没什么神秘，性质比二叉搜索树 BST 还简单。其主要操作就两个，<code class=\"language-text\">sink</code>（下沉）和 <code class=\"language-text\">swim</code>（上浮），用以维护二叉堆的性质。其主要应用有两个，首先是一种排序方法「堆排序」，第二是一种很有用的数据结构「优先级队列」。</p>\n<p>参考：<a href=\"https://github.com/labuladong/fucking-algorithm/blob/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%B3%BB%E5%88%97/%E4%BA%8C%E5%8F%89%E5%A0%86%E8%AF%A6%E8%A7%A3%E5%AE%9E%E7%8E%B0%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97.md\">https://github.com/labuladong/fucking-algorithm/blob/master/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%B3%BB%E5%88%97/%E4%BA%8C%E5%8F%89%E5%A0%86%E8%AF%A6%E8%A7%A3%E5%AE%9E%E7%8E%B0%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97.md</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/merge-k-sorted-lists/\">23. 合并K个升序链表</a></td>\n<td>55.1%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/kth-largest-element-in-an-array/\">215. 数组中的第K个最大元素</a></td>\n<td>64.6%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/the-skyline-problem/\">218. 天际线问题</a></td>\n<td>46.9%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/sliding-window-maximum/\">239. 滑动窗口最大值</a></td>\n<td>49.5%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/ugly-number-ii/\">264. 丑数 II</a></td>\n<td>57.1%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/find-median-from-data-stream/\">295. 数据流的中位数</a></td>\n<td>51.9%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/super-ugly-number/\">313. 超级丑数</a></td>\n<td>64.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"前缀树\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%BC%80%E6%A0%91\" aria-label=\"前缀树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%89%8D%E7%BC%80%E6%A0%91\" aria-label=\"前缀树 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前缀树</h5>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/implement-trie-prefix-tree/\">208. 实现 Trie (前缀树)</a></td>\n<td>71.6%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/\">211. 添加与搜索单词 - 数据结构设计</a></td>\n<td>48.2%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/word-search-ii/\">212. 单词搜索 II</a></td>\n<td>45.4%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/palindrome-pairs/\">336. 回文对</a></td>\n<td>40.1%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/\">421. 数组中两个数的最大异或值</a></td>\n<td>62.4%</td>\n<td>中等</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"二叉索引树（树状数组）\" style=\"position:relative;\"><a href=\"#%E4%BA%8C%E5%8F%89%E7%B4%A2%E5%BC%95%E6%A0%91%EF%BC%88%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%89\" aria-label=\"二叉索引树（树状数组） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E4%BA%8C%E5%8F%89%E7%B4%A2%E5%BC%95%E6%A0%91%EF%BC%88%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%89\" aria-label=\"二叉索引树（树状数组） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二叉索引树（树状数组）</h5>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/range-sum-query-mutable/\">307. 区域和检索 - 数组可修改</a></td>\n<td>55.5%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/\">315. 计算右侧小于当前元素的个数</a></td>\n<td>42.0%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/count-of-range-sum/\">327. 区间和的个数</a></td>\n<td>42.9%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/reverse-pairs/\">493. 翻转对</a></td>\n<td>34.2%</td>\n<td>困难</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/create-sorted-array-through-instructions/\">1649. 通过指令创建有序数组</a></td>\n<td>46.9%</td>\n<td>困难</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<h5 id=\"红黑树（一种自平衡二叉查找树）\" style=\"position:relative;\"><a href=\"#%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%80%E7%A7%8D%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%EF%BC%89\" aria-label=\"红黑树（一种自平衡二叉查找树） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%80%E7%A7%8D%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%EF%BC%89\" aria-label=\"红黑树（一种自平衡二叉查找树） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>红黑树（一种自平衡二叉查找树）</h5>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><a href=\"https://leetcode-cn.com/problems/balance-a-binary-search-tree/\">1382. 将二叉搜索树变平衡</a></td>\n<td>68.6%</td>\n<td>中等</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"用途\" style=\"position:relative;\"><a href=\"#%E7%94%A8%E9%80%94\" aria-label=\"用途 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E7%94%A8%E9%80%94\" aria-label=\"用途 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>用途</h3>\n<p>react源码</p>\n<p>组织结构</p>\n<p>霍夫曼树</p>","frontmatter":{"title":"各个数据结构值得一刷的leetcode题","date":"2021-05-24","tag":"leetcode刷题整理","type":"学习整理","author":"y_lv"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%93%BE%E8%A1%A8%EF%BC%9A-%E9%93%BE%E8%A1%A8%E7%BF%BB%E8%BD%AC-%E5%93%A8%E5%85%B5%E8%8A%82%E7%82%B9%EF%BC%88%E4%B8%B4%E7%95%8C%E6%9D%A1%E4%BB%B6%EF%BC%89\">链表： 链表翻转 哨兵节点（临界条件）</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%A0%91\">树</a></p>\n<ul>\n<li>\n<p><a href=\"#%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95\">常用算法</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86\">前中后序遍历</a></li>\n<li><a href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86\">深度优先遍历</a></li>\n<li><a href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95\">广度优先算法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%B8%80%E4%BA%9B%E6%A0%91\">一些树</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a></li>\n<li><a href=\"#%E4%BA%8C%E5%8F%89%E5%A0%86\">二叉堆</a></li>\n<li><a href=\"#%E5%89%8D%E7%BC%80%E6%A0%91\">前缀树</a></li>\n<li><a href=\"#%E4%BA%8C%E5%8F%89%E7%B4%A2%E5%BC%95%E6%A0%91%EF%BC%88%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%EF%BC%89\">二叉索引树（树状数组）</a></li>\n<li><a href=\"#%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%80%E7%A7%8D%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%EF%BC%89\">红黑树（一种自平衡二叉查找树）</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%94%A8%E9%80%94\">用途</a></p>\n</li>\n</ul>\n</li>\n</ul>","id":"8baff616-77cf-55cc-9642-781e5757285a"}},"pageContext":{"slug":"/algorithm/","sourceInstanceName":"blog"}},"staticQueryHashes":["3159585216","3810076356"]}