{"componentChunkName":"component---src-templates-blog-js","path":"/101. 对称二叉树/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"题目\" style=\"position:relative;\"><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>题目</h2>\n<p>给定一个二叉树，检查它是否是镜像对称的。\n例如，二叉树 [1,2,2,3,4,4,3] 是对称的。</p>\n<deckgo-highlight-code shell  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3</code>\n        </deckgo-highlight-code>\n<p>但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:</p>\n<deckgo-highlight-code shell  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">    1\n   / \\\n  2   2\n   \\   \\\n   3    3</code>\n        </deckgo-highlight-code>\n<p>进阶：\n你可以运用递归和迭代两种方法解决这个问题吗？</p>\n<p><a href=\"https://leetcode-cn.com/problems/symmetric-tree\">来源：力扣（LeetCode）</a></p>\n<h2 id=\"解题\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解题</h2>\n<h3 id=\"slsay-96ms\" style=\"position:relative;\"><a href=\"#slsay-96ms\" aria-label=\"slsay 96ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#slsay-96ms\" aria-label=\"slsay 96ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slsay 96ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">var isSymmetric = function(root) {\n   const diff = (left, right) =&gt; {\n       if (!left &amp;&amp; !right) return true;\n       if (!left || !right) return false;\n       if (left.val === right.val)　{\n           return diff(left.left, right.right) &amp;&amp; diff(left.right, right.left);\n       } else {\n           return false;\n       }\n   };\n\n   return diff(root, root);\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"fangq78-0ms\" style=\"position:relative;\"><a href=\"#fangq78-0ms\" aria-label=\"fangq78 0ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#fangq78-0ms\" aria-label=\"fangq78 0ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fangq78 0ms</h3>\n<deckgo-highlight-code java  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">class Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return isPair(root, root);\n    }\n\n    public boolean isPair(TreeNode t1, TreeNode t2) {\n        if (t1 == null &amp;&amp; t2 == null) return true;\n        if (t1 == null || t2 == null) return false;\n        return (t1.val == t2.val)\n            &amp;&amp; isPair(t1.right, t2.left)\n            &amp;&amp; isPair(t1.left, t2.right);\n    }\n}</code>\n        </deckgo-highlight-code>\n<h3 id=\"aria486-92ms\" style=\"position:relative;\"><a href=\"#aria486-92ms\" aria-label=\"aria486 92ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#aria486-92ms\" aria-label=\"aria486 92ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aria486 92ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">var isSymmetric = function(root) {\n  if(!root) {\n    return true;\n  }\n  const isEqual = (left, right) =&gt; {\n    if(!left &amp;&amp; !right) {\n      return true;\n    }\n    if(!left || !right) {\n      return false;\n    }\n    return left.val === right.val &amp;&amp; isEqual(left.left, right.right) &amp;&amp; isEqual(left.right, right.left);\n  }\n  return isEqual(root.left, root.right);\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"dutlyuyu\" style=\"position:relative;\"><a href=\"#dutlyuyu\" aria-label=\"dutlyuyu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#dutlyuyu\" aria-label=\"dutlyuyu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dutLyuyu</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\n\n// 左中右 遍历出所有节点之后 比较 + 按层\nvar isSymmetric = function(root) {\n    const arr = [];\n    const loop = (node, level)=&gt; {\n        if (!arr[level]) arr[level] = [];\n        if (!node) {\n            arr[level].push(&#39;#&#39;);\n            return;\n        } else {\n            arr[level].push(node.val);\n        }\n      \n        // if (!(node.left === null &amp;&amp; node.right === null)){ \n        //     loop(node.left, level + 1);\n        //     loop(node.right, level + 1);\n        // } \n\n        let flag = 0; \n        if(node.left === null){\n            flag++;\n        } else if(node.right === null){\n            flag++;\n        }\n\n        if(node.left !== null){\n            loop(node.left, level + 1);\n        } else if(flag === 1){\n           loop(node.left, level + 1);\n        }\n    \n        if(node.right !== null){\n            loop(node.right, level + 1);\n        } else if(flag === 1){\n            loop(node.right, level + 1);\n        }\n    }\n    loop(root, 0);\n    for (let level = 0; level &lt; arr.length; level++){\n            for (let i = 0, j = arr[level].length - 1; i &lt; j; i++, j--) {\n                if (arr[level][i] !== arr[level][j]) {\n                    return false;\n                }\n            }\n    }\n    return true\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"xiaozhouzhou-有问题-没跑通\" style=\"position:relative;\"><a href=\"#xiaozhouzhou-%E6%9C%89%E9%97%AE%E9%A2%98-%E6%B2%A1%E8%B7%91%E9%80%9A\" aria-label=\"xiaozhouzhou 有问题 没跑通 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#xiaozhouzhou-%E6%9C%89%E9%97%AE%E9%A2%98-%E6%B2%A1%E8%B7%91%E9%80%9A\" aria-label=\"xiaozhouzhou 有问题 没跑通 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xiaozhouzhou 有问题 没跑通</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\n\nvar getLeft = function (point) {\n    var array = [];\n    if(point) {\n        var val = point.val;\n        if(!val) {\n            val = &quot;null&quot;;\n        }\n\n        \n        array = [...getLeft(point.right),val,...getLeft(point.left) ];\n        \n    }\n    return array;\n}\nvar getRight = function(point,array) {\nvar array = [];\n    if(point) {\n        var val = point.val;\n        if(!val ) {\n            val = &quot;null&quot;;\n        }\n        array = [...getRight(point.left),val,...getRight(point.right) ];\n        \n    }\n    return array;\n}\nvar isSymmetric = function(root) {\n    if(root) {\n        var leftArray = getLeft(root.left);\n        var rightArray = getRight(root.right);\n        console.log(leftArray);\n        console.log(rightArray);\n        if(leftArray.join(&quot;,&quot;) === rightArray.join(&quot;,&quot;)) {\n            return true;\n        }else {\n            return false;\n        }\n    }else {\n        return false;\n    }\n};</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"101. 对称二叉树","date":"2021-04-09","tag":"二叉树","type":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%A2%98%E7%9B%AE\">题目</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E9%A2%98\">解题</a></p>\n<ul>\n<li><a href=\"#slsay-96ms\">slsay 96ms</a></li>\n<li><a href=\"#fangq78-0ms\">fangq78 0ms</a></li>\n<li><a href=\"#aria486-92ms\">Aria486 92ms</a></li>\n<li><a href=\"#dutlyuyu\">dutLyuyu</a></li>\n<li><a href=\"#xiaozhouzhou-%E6%9C%89%E9%97%AE%E9%A2%98-%E6%B2%A1%E8%B7%91%E9%80%9A\">xiaozhouzhou 有问题 没跑通</a></li>\n</ul>\n</li>\n</ul>","id":"0e0cbaa8-520d-53d7-9a54-28deb3a6d126"}},"pageContext":{"slug":"/101. 对称二叉树/"}},"staticQueryHashes":["3159585216","3810076356"]}