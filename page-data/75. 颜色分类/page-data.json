{"componentChunkName":"component---src-templates-blog-js","path":"/75. 颜色分类/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"题目\" style=\"position:relative;\"><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E9%A2%98%E7%9B%AE\" aria-label=\"题目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>题目</h2>\n<p>给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。</p>\n<p>此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。</p>\n<p> </p>\n<p>示例 1：</p>\n<p>输入：nums = [2,0,2,1,1,0]\n输出：[0,0,1,1,2,2]\n示例 2：</p>\n<p>输入：nums = [2,0,1]\n输出：[0,1,2]\n示例 3：</p>\n<p>输入：nums = [0]\n输出：[0]\n示例 4：</p>\n<p>输入：nums = [1]\n输出：[1]\n </p>\n<p>提示：</p>\n<p>n == nums.length\n1 &#x3C;= n &#x3C;= 300\nnums[i] 为 0、1 或 2\n </p>\n<p>进阶：</p>\n<p>你可以不使用代码库中的排序函数来解决这道题吗？\n你能想出一个仅使用常数空间的一趟扫描算法吗？</p>\n<p><a href=\"https://leetcode-cn.com/problems/sort-colors\">来源：力扣（LeetCode）</a></p>\n<h2 id=\"解题\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E8%A7%A3%E9%A2%98\" aria-label=\"解题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解题</h2>\n<h3 id=\"slsay-80ms\" style=\"position:relative;\"><a href=\"#slsay-80ms\" aria-label=\"slsay 80ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#slsay-80ms\" aria-label=\"slsay 80ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slsay 80ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar sortColors = function(nums) {\n    let left = 0;\n    let right = nums.length - 1;\n    let cur = 0;\n    let temp;\n    while (cur &lt;= right) {\n        if (nums[cur] === 0) {\n            temp = nums[left];\n            nums[left] = nums[cur];\n            nums[cur] = temp;\n            left += 1;\n            cur += 1;\n        } else if (nums[cur] === 2) {\n            temp = nums[right];\n            nums[right] = nums[cur];\n            nums[cur] = temp;\n            right += -1;\n        } else {\n            cur += 1;\n        }\n    }\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"dutlyuyu-100ms\" style=\"position:relative;\"><a href=\"#dutlyuyu-100ms\" aria-label=\"dutlyuyu 100ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#dutlyuyu-100ms\" aria-label=\"dutlyuyu 100ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dutLyuyu 100ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar sortColors = function(nums) {\n    const r = [0, 0 ,0];\n    for (let i = 0; i &lt; nums.length; i++ ){\n        r[nums[i]]++;\n    }\n\n    for(let i = 0; i &lt; nums.length; i++ ){\n        if(i+1 &lt;= r[0]){\n            nums[i] = 0;\n        }else if( i + 1 &lt;= r[1] + r[0]){\n            nums[i] = 1;\n        }else{\n            nums[i] = 2;\n        }\n    }\n    return nums;\n};</code>\n        </deckgo-highlight-code>\n<h3 id=\"aria486-90ms\" style=\"position:relative;\"><a href=\"#aria486-90ms\" aria-label=\"aria486 90ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#aria486-90ms\" aria-label=\"aria486 90ms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aria486 90ms</h3>\n<deckgo-highlight-code js  terminal=\"carbon\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">const sortColors = (nums) =&gt; {\n  const colors = [0, 0, 0];\n  for (let i = 0; i &lt; nums.length; i++) {\n    colors[nums[i]] ++;\n  }\n  let j = 0;\n  for (let i = 0; i &lt; colors.length; i++) {\n    while (colors[i]) {\n      nums[j] = i;\n      j++;\n      colors[i]--;\n    }\n  }\n  return nums;\n};</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"75. 颜色分类","date":"2020-10-14","tag":"矩形"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%A2%98%E7%9B%AE\">题目</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E9%A2%98\">解题</a></p>\n<ul>\n<li><a href=\"#slsay-80ms\">slsay 80ms</a></li>\n<li><a href=\"#dutlyuyu-100ms\">dutLyuyu 100ms</a></li>\n<li><a href=\"#aria486-90ms\">Aria486 90ms</a></li>\n</ul>\n</li>\n</ul>","id":"c2e1ae3c-ddbe-5506-8d81-d4279ea998ca"}},"pageContext":{"slug":"/75. 颜色分类/"}},"staticQueryHashes":["3159585216","3810076356"]}